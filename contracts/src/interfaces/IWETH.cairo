use starknet::ContractAddress;

#[starknet::interface]
trait IWETH<TContractState> {
    fn deposit(ref self: TContractState); //payable
    fn withdraw(ref self: TContractState, wad: u256);
}
// @note
// ################################################################################################################################
// changes from solidity and other notes
// ################################################################################################################################
//
// in this interface all functions are external.
//
// this trait need to inherit IERC20Metadata,
// because in cairo interface can't inheirt another interfaces,
// so we need to inheirt it in impl this interface,
// and to import it - use openzeppelin::token::erc20::IERC20Metadata;
//
// ################################################################################################################################
//
//
// --------------------------------------------------------------------------------------------------------------------------------
// General explanation
// --------------------------------------------------------------------------------------------------------------------------------
//
//
//
// +++++++++ the propuse of this interface: +++++++++
//
// enables ETH to be used in ERC20-based protocols without complex changes.
//
// --------------------------------------------------------------------------------------------------------------------------------
//
//
// ================================================================================================================================
// usage
// ================================================================================================================================
//
// ------contracts-------
//
//
// ------interfaces-------
//
//
// ================================================================================================================================


